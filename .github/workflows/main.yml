name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Next.js Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nextapp:latest ./frontend -f frontend/next.dockerfile
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nextapp:latest

      - name: Build and Push Flask Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:latest ./backend -f backend/flask.dockerfile
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update package list and install dependencies
            sudo apt update -y
            sudo apt install -y docker.io git

            # Add current user to the Docker group
            sudo usermod -aG docker $USER
            newgrp docker  # Apply group changes immediately

            # Install Docker Compose v2
            sudo apt install docker-compose-v2 -y

            # Verify Docker and Docker Compose installation
            docker --version
            docker compose version

            # Navigate to home directory
            cd /home/${{ secrets.EC2_USER }}

            # Clone repo if it does not exist
            if [ ! -d "python-flask-crud" ]; then
              git clone https://github.com/SangeetaShinde7/python-flask-crud.git
            fi

            # Navigate to repo
            cd python-flask-crud

            # Ensure the correct branch is checked out
            git fetch origin
            git checkout main
            git pull origin main

            # Pull latest images and restart services
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nextapp:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:latest
            docker compose down
            docker compose up -d
